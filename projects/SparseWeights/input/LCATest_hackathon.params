//
// 2016-01-27 Hackathon PetaVision Params 
//

debugParsing = false;

HyPerCol "column" = {
   nx = 60;
   ny = 60;
   dt = 1.0;
   dtAdaptFlag = false;
   randomSeed = 1234567890;
   startTime = 0.0;
   stopTime = 2.0;  
   progressInterval = 1.0;
   errorOnNotANumber = false;
   writeProgressToErr = false;  
   outputPath = "output/";
   printParamsFilename = "pv.params";
   filenamesContainLayerNames = true;  
   filenamesContainConnectionNames = true;
   initializeFromCheckpointDir = "";
   checkpointWrite = false;
   suppressLastOutput = true;
};

//
// layers
//

ANNLayer "residual" = {
    nxScale = 1; 
    nyScale = 1;
    nf = 512;
    phase = 1;
    mirrorBCflag = true;
    triggerLayerName = NULL;
    writeStep = -1;
    sparseLayer = false;
    InitVType = "ZeroV";
    VThresh = -infinity;   
    AMax = infinity;
    AMin = -infinity;
    AShift = 0.0;
    VWidth = 0.0;
};

HyPerLCALayer "V1" = {
    nxScale                             = 0.5;
    nyScale                             = 0.5;
    nf                                  = 1024;
    phase                               = 2;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    InitVType                           = "UniformRandomV";
    minV                                = -1;
    maxV                                = 0.1;
    triggerLayerName                    = NULL;
    writeStep                           = 1;
    initialWriteTime                    = 0; // 1.44e+06;
    sparseLayer                         = true;
    writeSparseValues                   = true;
    VThresh                             = 0.025;
    AMin                                = 0;
    AMax                                = infinity;
    AShift                              = 0;
    VWidth                              = 0.025;
    timeConstantTau                     = 100;
    timeConstantTauMinimum              = 10;
    numWindowX                          = 1;
    numWindowY                          = 1;
    slopeErrorStd                       = 0.01;
    selfInteract                        = true;
    dVThresh                            = 0;
};

ANNLayer "reconstruction" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 512;
    phase                               = 3;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    InitVType                           = "ZeroV";
    triggerLayerName                    = NULL;
    writeStep                           = -1.0;
    initialWriteTime                    = 1.0;
    sparseLayer                         = false;
    VThresh                             = -infinity;
    AMin                                = -infinity;
    AMax                                = infinity;
    AShift                              = 0;
    VWidth                              = 0;
};

ANNLayer "input" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 512;
    phase                               = 0;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    InitVType                           = "UniformRandomV";
    MinV                                = -1;
    MaxV                                = 1;
    triggerLayerName                    = NULL;
    writeStep                           = 1.0;
    initialWriteTime                    = 1.0;
    sparseLayer                         = false;
    VThresh                             = -infinity;
    AMin                                = -infinity;
    AMax                                = infinity;
    AShift                              = 0;
    VWidth                              = 0;
};

// connections

IdentConn "input_to_residual" = {
    preLayerName = "input";
    postLayerName = "residual";
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};

HyPerConn "V1_to_residual" = {
    preLayerName                        = "V1";
    postLayerName                       = "residual";
    channelCode                         = 1;
    sharedWeights                       = true;
    weightInitType                      = "UniformRandomWeight";
    // initWeightsFile                     was set to (NULL);
    wMinInit                            = -1;
    wMaxInit                            = 1;
    sparseFraction                      = 0.9;
    numAxonalArbors                     = 1;
    plasticityFlag                      = false;
    pvpatchAccumulateType               = "convolve";
    preActivityIsNotRate                = false;
    writeStep                           = 1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    combine_dW_with_W_flag              = false;
    delay                               = [0.0];
    nxp                                 = 18;
    nyp                                 = 18;
    shrinkPatches                       = false;
    updateGSynFromPostPerspective       = false;
    normalizeMethod                     = "normalizeL2";
    strength                            = 1;
    rMinX                               = 0;
    rMinY                               = 0;
    normalize_cutoff                    = 0;
    symmetrizeWeights                   = false;
    normalizeFromPostPerspective        = false;
    normalizeArborsIndividually         = false;
    minL2NormTolerated                  = 0;
};

TransposeConn "residual_to_V1" = {
    preLayerName                        = "residual";
    postLayerName                       = "V1";
    channelCode                         = 0;
    pvpatchAccumulateType               = "convolve";
    preActivityIsNotRate                = false;
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    delay                               = [0.0];
    updateGSynFromPostPerspective       = false;
    originalConnName                    = "V1_to_residual";
};

CloneConn "V1_to_reconstruction" = {
    preLayerName                        = "V1";
    postLayerName                       = "reconstruction";
    channelCode                         = 0;
    pvpatchAccumulateType               = "convolve";
    preActivityIsNotRate                = false;
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    delay                               = [0.0];
    updateGSynFromPostPerspective       = false;
    originalConnName                    = "V1_to_residual";
};

